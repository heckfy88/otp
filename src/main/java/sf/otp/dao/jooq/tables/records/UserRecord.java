/*
 * This file is generated by jOOQ.
 */
package sf.otp.dao.jooq.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import sf.otp.dao.jooq.tables.User;


/**
 * Пользователи
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record9<UUID, String, String, String, String, String, String, LocalDateTime, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>otp.user.id</code>. Идентификатор пользователя
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>otp.user.id</code>. Идентификатор пользователя
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>otp.user.username</code>. Имя пользователя
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>otp.user.username</code>. Имя пользователя
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>otp.user.role</code>. Роль пользователя
     */
    public void setRole(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>otp.user.role</code>. Роль пользователя
     */
    public String getRole() {
        return (String) get(2);
    }

    /**
     * Setter for <code>otp.user.email</code>. Электронная почта пользователя
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>otp.user.email</code>. Электронная почта пользователя
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>otp.user.phone_number</code>. Номер телефона
     * пользователя
     */
    public void setPhoneNumber(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>otp.user.phone_number</code>. Номер телефона
     * пользователя
     */
    public String getPhoneNumber() {
        return (String) get(4);
    }

    /**
     * Setter for <code>otp.user.tg_id</code>. ID пользователя в Telegram
     */
    public void setTgId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>otp.user.tg_id</code>. ID пользователя в Telegram
     */
    public String getTgId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>otp.user.password_hash</code>. Хэш пароля пользователя
     */
    public void setPasswordHash(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>otp.user.password_hash</code>. Хэш пароля пользователя
     */
    public String getPasswordHash() {
        return (String) get(6);
    }

    /**
     * Setter for <code>otp.user.created_at</code>. Дата создания пользователя
     */
    public void setCreatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>otp.user.created_at</code>. Дата создания пользователя
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>otp.user.is_active</code>. Активность пользователя
     */
    public void setIsActive(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>otp.user.is_active</code>. Активность пользователя
     */
    public Boolean getIsActive() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<UUID, String, String, String, String, String, String, LocalDateTime, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<UUID, String, String, String, String, String, String, LocalDateTime, Boolean> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.ROLE;
    }

    @Override
    public Field<String> field4() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field5() {
        return User.USER.PHONE_NUMBER;
    }

    @Override
    public Field<String> field6() {
        return User.USER.TG_ID;
    }

    @Override
    public Field<String> field7() {
        return User.USER.PASSWORD_HASH;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return User.USER.CREATED_AT;
    }

    @Override
    public Field<Boolean> field9() {
        return User.USER.IS_ACTIVE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getRole();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String component5() {
        return getPhoneNumber();
    }

    @Override
    public String component6() {
        return getTgId();
    }

    @Override
    public String component7() {
        return getPasswordHash();
    }

    @Override
    public LocalDateTime component8() {
        return getCreatedAt();
    }

    @Override
    public Boolean component9() {
        return getIsActive();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getRole();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public String value5() {
        return getPhoneNumber();
    }

    @Override
    public String value6() {
        return getTgId();
    }

    @Override
    public String value7() {
        return getPasswordHash();
    }

    @Override
    public LocalDateTime value8() {
        return getCreatedAt();
    }

    @Override
    public Boolean value9() {
        return getIsActive();
    }

    @Override
    public UserRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setPhoneNumber(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setTgId(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setPasswordHash(value);
        return this;
    }

    @Override
    public UserRecord value8(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UserRecord value9(Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    public UserRecord values(UUID value1, String value2, String value3, String value4, String value5, String value6, String value7, LocalDateTime value8, Boolean value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(UUID id, String username, String role, String email, String phoneNumber, String tgId, String passwordHash, LocalDateTime createdAt, Boolean isActive) {
        super(User.USER);

        setId(id);
        setUsername(username);
        setRole(role);
        setEmail(email);
        setPhoneNumber(phoneNumber);
        setTgId(tgId);
        setPasswordHash(passwordHash);
        setCreatedAt(createdAt);
        setIsActive(isActive);
        resetChangedOnNotNull();
    }
}
